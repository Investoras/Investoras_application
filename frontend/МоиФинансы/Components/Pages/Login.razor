@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@using МоиФинансы.Components.Shared.Models

<div class="container mt-5">
    <h3 class="text-center">Авторизация</h3>
    <div class="row justify-content-center">
        <div class="col-md-6">
            <EditForm Model="@LoginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label>Email</label>
                    <InputText type="email" @bind-Value="@LoginModel.Email" class="form-control" />
                    <ValidationMessage For="@(() => LoginModel.Email)" />
                </div>

                <div class="form-group">
                    <label>Пароль</label>
                    <InputText type="password" @bind-Value="@LoginModel.Password" class="form-control" />
                    <ValidationMessage For="@(() => LoginModel.Password)" />
                </div>

                <button type="submit" class="btn btn-primary btn-block">Войти</button>
            </EditForm>

            @if (errorMessage != null)
            {
                <div class="alert alert-danger mt-3">@errorMessage</div>
            }
        </div>
    </div>
</div>

@code {
    private LoginDto LoginModel = new();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("api/auth/login", LoginModel);
        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            // Сохраните токен в LocalStorage или Cookie
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Ошибка авторизации. Проверьте ваши учетные данные.";
        }
    }
}